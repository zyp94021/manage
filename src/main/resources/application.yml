server:
  port: 8090
# Spring Profiles Active
spring:
  profiles:
    #active: prod
    active: dev
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:mysql://localhost:3306/manage?useSSL=false
    username: root
    driverClassName: com.mysql.jdbc.Driver

    # 连接池的配置信息
    # 初始化大小，最小，最大
    initialSize: 5
    minIdle: 5
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,log4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
  jpa:
    database: MYSQL
    show-sql: true
    hibernate:
      ddl-auto : update
      #naming-strategy : org.hibernate.cfg.ImprovedNamingStrategy
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5Dialect
        format_sql: true

# JWT
jwt:
  header: Authorization
  secret: mySecret
  expiration: 604800
  tokenHead: "Bearer "
  route:
    authentication:
      login: auth
      refresh: refresh
      register: "auth/register"


---

spring:
  profiles: dev
  datasource:
    password: 123456789

logging:
  level:
    org.springframework:
      data: debug
      security: debug
      web: debug

---

spring:
  profiles: prod
  datasource:
    password: 123456789

logging:
  level:
    root: info
    org.springframework:
      data: info
      security: info
      web: info
  file: log.log
  path: /var/log/tomcat

